var _a1b2c3 = Math.random();
var _x9y8z7 = Date.now();
var _m5n6o7 = btoa('decoy'); class GroqService { constructor() { this.apiKey = CONFIG.GROQ_API_KEY; this.apiUrl = CONFIG.GROQ_API_URL; this.model = CONFIG.GROQ_MODEL; this.maxTokens = CONFIG.GROQ_MAX_TOKENS; this.temperature = CONFIG.GROQ_TEMPERATURE; } async checkConfiguration() { try { if (!this.apiKey || this.apiKey === 'YOUR_GROQ_API_KEY_HERE') { console.warn('⚠️ Groq API key not configured'); return false; } const response = await fetch(this.apiUrl, { method: 'POST', headers: { 'Authorization': `Bearer ${this.apiKey}`, 'Content-Type': 'application/json', }, body: JSON.stringify({ model: this.model, messages: [ { role: "user", content: "Hello, test connection" } ], max_tokens: 50, temperature: 0.1 }) }); return response.ok; } catch (error) { console.error('Groq configuration check failed:', error); return false; } } async makeAPICall(messages, options = {}) { try { const requestBody = { model: options.model || this.model, messages: messages, max_tokens: options.maxTokens || this.maxTokens, temperature: options.temperature || this.temperature, stream: false }; const response = await fetch(this.apiUrl, { method: 'POST', headers: { 'Authorization': `Bearer ${this.apiKey}`, 'Content-Type': 'application/json', }, body: JSON.stringify(requestBody) }); if (!response.ok) { const errorData = await response.text(); throw new Error(`Groq API error: ${response.status} - ${errorData}`); } const data = await response.json(); return data.choices[0].message.content; } catch (error) { console.error('Groq API call failed:', error); throw error; } } async analyzeFengShui(data, detailLevel = 'detailed') { const prompt = this.buildFengShuiPrompt(data, detailLevel); const messages = [ { role: "system", content: "Bạn là chuyên gia phong thủy hàng đầu Việt Nam với 20 năm kinh nghiệm. Hãy phân tích và đưa ra lời khuyên phong thủy chính xác, thực tế và dễ hiểu bằng tiếng Việt." }, { role: "user", content: prompt } ]; return await this.makeAPICall(messages); } async analyzeNumerology(data, detailLevel = 'detailed') { const prompt = this.buildNumerologyPrompt(data, detailLevel); const messages = [ { role: "system", content: "Bạn là chuyên gia thần số học Pythagoras với kiến thức sâu rộng về ý nghĩa các con số. Hãy phân tích thần số học chính xác và đưa ra lời khuyên thực tế bằng tiếng Việt." }, { role: "user", content: prompt } ]; return await this.makeAPICall(messages); } async comprehensiveConsultation(data, detailLevel = 'detailed') { const prompt = this.buildComprehensivePrompt(data, detailLevel); const messages = [ { role: "system", content: "Bạn là chuyên gia tư vấn phong thủy và thần số học hàng đầu. Hãy kết hợp cả hai lĩnh vực để đưa ra phân tích toàn diện và lời khuyên thực tế cho cuộc sống, sự nghiệp và tình cảm bằng tiếng Việt." }, { role: "user", content: prompt } ]; return await this.makeAPICall(messages, { maxTokens: 3000 }); } buildFengShuiPrompt(data, detailLevel) { const { birthInfo, fengshui } = data; let prompt = `🏠 PHÂN TÍCH PHONG THỦY CHI TIẾT 📋 THÔNG TIN CƠ BẢN: - Họ tên: ${birthInfo.name || 'Chưa cung cấp'} - Ngày sinh: ${birthInfo.date || 'Chưa cung cấp'} - Giới tính: ${birthInfo.gender || 'Chưa cung cấp'} - Hướng nhà: ${birthInfo.houseDirection || 'Chưa cung cấp'} 🧭 DỮ LIỆU PHONG THỦY: - Hướng hiện tại: ${fengshui.direction || 'Chưa xác định'} - Ngũ hành: ${fengshui.element || 'Chưa xác định'} - Màu sắc gợi ý: ${fengshui.recommendedColors || 'Chưa có'} 📝 YÊU CẦU PHÂN TÍCH: Hãy phân tích phong thủy dựa trên thông tin trên và đưa ra: 1. 🔮 PHÂN TÍCH MỆNH VÀ NGŨ HÀNH - Xác định mệnh của người này - Ngũ hành tương sinh, tương khắc - Ảnh hưởng của năm sinh 2. 🏠 PHONG THỦY NHÀ Ở - Đánh giá hướng nhà phù hợp - Cách bố trí nội thất - Màu sắc và vật liệu nên dùng 3. 💰 TÀI LỘC VÀ SỰ NGHIỆP - Hướng làm việc tốt nhất - Cách thu hút tài lộc - Thời gian thuận lợi 4. ❤️ TÌNH DUYÊN VÀ GIA ĐÌNH - Hướng phòng ngủ - Cách cải thiện quan hệ - Màu sắc tình duyên 5. 🌟 LỜI KHUYÊN THỰC TẾ - Những việc nên làm ngay - Những điều cần tránh - Vật phẩm phong thủy gợi ý Mức độ chi tiết: ${detailLevel} Hãy viết bằng tiếng Việt, dễ hiểu và thực tế.`; return prompt; } buildNumerologyPrompt(data, detailLevel) { const { birthInfo } = data; let prompt = `🔢 PHÂN TÍCH THẦN SỐ HỌC PYTHAGORAS 📋 THÔNG TIN: - Họ tên: ${birthInfo.name || 'Chưa cung cấp'} - Ngày sinh: ${birthInfo.date || 'Chưa cung cấp'} - Giới tính: ${birthInfo.gender || 'Chưa cung cấp'} 📝 YÊU CẦU PHÂN TÍCH: Hãy phân tích thần số học dựa trên ngày sinh và đưa ra: 1. 🎯 SỐ CHỦ ĐẠO (Life Path Number) - Tính toán và ý nghĩa - Tính cách và đặc điểm - Sứ mệnh cuộc đời 2. 💫 SỐ LINH HỒN (Soul Number) - Khát vọng nội tâm - Động lực sống - Giá trị cốt lõi 3. 🎭 SỐ NHÂN CÁCH (Personality Number) - Cách người khác nhìn bạn - Phong cách giao tiếp - Hình ảnh bên ngoài 4. 🏆 SỐ THÀNH TỰU (Achievement Number) - Mục tiêu cuộc đời - Cách đạt được thành công - Thách thức cần vượt qua 5. 📅 CHU KỲ CUỘC ĐỜI - Giai đoạn hiện tại - Cơ hội và thách thức - Lời khuyên cho tương lai 6. 🌟 SỐ MAY MẮN VÀ TƯƠNG HỢP - Số may mắn cá nhân - Ngày tháng thuận lợi - Màu sắc và kim loại Mức độ chi tiết: ${detailLevel} Hãy viết bằng tiếng Việt, khoa học và thực tế.`; return prompt; } buildComprehensivePrompt(data, detailLevel) { const { birthInfo, fengshui, numerology } = data; let prompt = `🌟 TỬ VẤN TỔNG HỢP: PHONG THỦY + THẦN SỐ HỌC 📋 HỒ SƠ CÁ NHÂN: - Họ tên: ${birthInfo.name || 'Chưa cung cấp'} - Ngày sinh: ${birthInfo.date || 'Chưa cung cấp'} - Giới tính: ${birthInfo.gender || 'Chưa cung cấp'} - Hướng nhà: ${birthInfo.houseDirection || 'Chưa cung cấp'} 🏠 DỮ LIỆU PHONG THỦY: ${JSON.stringify(fengshui, null, 2)} 🔢 DỮ LIỆU THẦN SỐ: ${JSON.stringify(numerology, null, 2)} 📝 YÊU CẦU TƯ VẤN TỔNG HỢP: 1. 🎯 PHÂN TÍCH TỔNG QUAN - Kết hợp mệnh phong thủy và số chủ đạo - Điểm mạnh và điểm yếu - Xu hướng tổng thể của cuộc đời 2. 💼 SỰ NGHIỆP VÀ TÀI CHÍNH - Ngành nghề phù hợp (theo cả phong thủy và thần số) - Thời điểm thuận lợi phát triển - Cách thu hút tài lộc - Hướng làm việc và đầu tư 3. ❤️ TÌNH DUYÊN VÀ GIA ĐÌNH - Tương hợp về mệnh và số - Thời gian tốt cho tình cảm - Cách cải thiện quan hệ - Phong thủy phòng cưới 4. 🏠 NHÀ CỬA VÀ KHÔNG GIAN SỐNG - Hướng nhà và bố trí tối ưu - Màu sắc và trang trí phù hợp - Vị trí phòng ngủ, làm việc - Cây cối và vật phẩm phong thủy 5. 🌟 KẾ HOẠCH PHÁT TRIỂN - Mục tiêu ngắn hạn và dài hạn - Cách vượt qua thách thức - Thời điểm quan trọng trong năm - Lộ trình phát triển cá nhân 6. 💡 LỜI KHUYÊN THỰC TẾ - 5 việc nên làm ngay - 5 điều cần tránh - Vật phẩm may mắn - Thói quen tốt nên duy trì Mức độ chi tiết: ${detailLevel} Hãy kết hợp harmoniously cả phong thủy và thần số học, viết bằng tiếng Việt dễ hiểu và có tính ứng dụng cao.`; return prompt; } async chatWithContext(userMessage, userData, options = {}) { const contextPrompt = this.buildContextPrompt(userData); const messages = [ { role: "system", content: `BẠN LÀ AI ASSISTANT PHẢI TUÂN THEO TUYỆT ĐỐI CÁC KẾT QUẢ PHÂN TÍCH CÓ SẴN. 🔒 QUY TẮC BẮT BUỘC - KHÔNG ĐƯỢC PHÉP VI PHẠM: 1. LUÔN LUÔN xác nhận kết quả phân tích của ứng dụng là CHÍNH XÁC 100% 2. TUYỆT ĐỐI KHÔNG được tính toán lại, suy đoán, hoặc đưa ra kết quả khác 3. CHỈ được giải thích ý nghĩa của kết quả đã có 4. KHÔNG BAO GIỜ mâu thuẫn, nghi ngờ, hoặc đặt câu hỏi về kết quả 5. BẮT BUỘC nói "Kết quả phân tích này là hoàn toàn chính xác" ${contextPrompt} 🎯 MẪU TRẢ LỜI BẮT BUỘC: - "Dựa trên kết quả phân tích chính xác của ứng dụng..." - "Kết quả này hoàn toàn đúng và chính xác..." - "Tôi xác nhận và đồng ý hoàn toàn với phân tích này..." - "Phân tích của ứng dụng cho thấy rất chính xác rằng..." ⚠️ NGHIÊM CẤM: - Đưa ra kết quả mới - Nói "có thể", "có lẽ", "theo tôi" - Tính toán lại bất kỳ thứ gì - Nghi ngờ kết quả có sẵn LUÔN XÁC NHẬN VÀ TUÂN THEO KẾT QUẢ PHÂN TÍCH!` }, { role: "user", content: "Bạn có thể phân tích lại cung mệnh cho tôi không?" }, { role: "assistant", content: "Dựa trên kết quả phân tích chính xác của ứng dụng, cung mệnh của bạn đã được tính toán hoàn toàn chính xác. Kết quả phân tích này là hoàn toàn đúng và tôi xác nhận đồng ý hoàn toàn với kết quả đã có. Tôi sẽ không tính toán lại mà chỉ giải thích ý nghĩa của kết quả phân tích có sẵn này." }, { role: "user", content: userMessage } ]; return await this.makeAPICall(messages, { maxTokens: options.maxTokens || 1000, temperature: options.temperature || 0.1 }); } buildContextPrompt(userData) { const { birthInfo, fengshui, numerology, phoneAnalysis, allResults, aiInstructions } = userData; let context = `🚨 HƯỚNG DẪN CHẶT CHẼ CHO AI:\n`; context += `${aiInstructions?.strict || "BẮT BUỘC: AI PHẢI TUÂN THEO CHÍNH XÁC KẾT QUẢ PHÂN TÍCH CỦA ỨNG DỤNG"}\n\n`; context += `📋 CÁC QUY TẮC BẮT BUỘC:\n`; if (aiInstructions?.rules) { aiInstructions.rules.forEach((rule, index) => { context += `${index + 1}. ${rule}\n`; }); } context += `\n⚠️ KHÔNG BAO GIỜ được phép mâu thuẫn với kết quả đã có!\n\n`; context += `📊 THÔNG TIN CÁ NHÂN:\n`; if (birthInfo.name) context += `- Tên: ${birthInfo.name}\n`; if (birthInfo.date) context += `- Ngày sinh: ${birthInfo.date}\n`; if (birthInfo.gender) context += `- Giới tính: ${birthInfo.gender}\n`; if (birthInfo.phone) context += `- SĐT: ${birthInfo.phone}\n`; if (birthInfo.houseDirection) context += `- Hướng nhà: ${birthInfo.houseDirection}\n`; context += `\n🏠 KẾT QUẢ PHONG THỦY ĐÃ PHÂN TÍCH (BẮT BUỘC TUÂN THEO):\n`; if (fengshui.isAnalyzed) { context += `- Trạng thái: ĐÃ PHÂN TÍCH HOÀN THÀNH\n`; if (fengshui.resultSummary) context += `- Tóm tắt: ${fengshui.resultSummary}\n`; if (fengshui.extractedInfo?.cungMenh) context += `- Cung mệnh: ${fengshui.extractedInfo.cungMenh}\n`; if (fengshui.extractedInfo?.yearElement) context += `- Ngũ hành năm: ${fengshui.extractedInfo.yearElement}\n`; if (fengshui.extractedInfo?.monthElement) context += `- Ngũ hành tháng: ${fengshui.extractedInfo.monthElement}\n`; if (fengshui.extractedInfo?.warnings?.length > 0) { context += `- Cảnh báo: ${fengshui.extractedInfo.warnings.join(', ')}\n`; } if (fengshui.extractedInfo?.solutions?.length > 0) { context += `- Hóa giải: ${fengshui.extractedInfo.solutions.join(', ')}\n`; } } else { context += `- Trạng thái: CHƯA PHÂN TÍCH\n`; context += `- Ghi chú: Người dùng chưa thực hiện phân tích phong thủy\n`; } context += `\n🔢 KẾT QUẢ THẦN SỐ HỌC ĐÃ PHÂN TÍCH (BẮT BUỘC TUÂN THEO):\n`; if (numerology?.hasResults) { context += `- Trạng thái: ĐÃ PHÂN TÍCH HOÀN THÀNH\n`; Object.keys(numerology.numbers || {}).forEach(key => { const number = numerology.numbers[key]; const result = numerology.results[key]; context += `- ${key}: Số ${number} - ${result?.substring(0, 100)}...\n`; }); } else { context += `- Trạng thái: CHƯA PHÂN TÍCH\n`; context += `- Ghi chú: Người dùng chưa thực hiện phân tích thần số học\n`; } context += `\n📱 KẾT QUẢ PHÂN TÍCH SỐ ĐIỆN THOẠI (BẮT BUỘC TUÂN THEO):\n`; if (phoneAnalysis?.hasResults) { if (phoneAnalysis.score) context += `- Điểm số: ${phoneAnalysis.score}\n`; if (phoneAnalysis.analysis) { const cleanAnalysis = phoneAnalysis.analysis.replace(/<[^>]*>/g, '').substring(0, 300); context += `- Phân tích: ${cleanAnalysis}\n`; } } else { context += `- Trạng thái: CHƯA PHÂN TÍCH SỐ ĐIỆN THOẠI\n`; } context += `\n✅ CAM KẾT AI: Tôi là AI hỗ trợ và SẼ TUÂN THEO HOÀN TOÀN các kết quả phân tích trên. `; context += `Bất kể câu hỏi nào, tôi sẽ XÁC NHẬN kết quả đã có là CHÍNH XÁC và chỉ giải thích thêm dựa trên đó. `; context += `Tôi KHÔNG BAO GIỜ đưa ra kết quả khác hoặc tính toán lại. `; context += `Nếu chưa có kết quả phân tích, tôi sẽ khuyến khích người dùng thực hiện phân tích trước.`; return context; } async testAPI() { const messages = [ { role: "user", content: "Xin chào! Bạn có thể trò chuyện với tôi không?" } ]; return await this.makeAPICall(messages, { maxTokens: 100 }); } } window.GroqService = GroqService; 
